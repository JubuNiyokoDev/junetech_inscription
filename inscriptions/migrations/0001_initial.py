# Generated by Django 5.2.1 on 2025-05-16 11:02

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id_event', models.AutoField(primary_key=True, serialize=False)),
                ('id_admin', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('id_redactor', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('published', models.BooleanField(default=False)),
                ('title_fr', models.CharField(max_length=200)),
                ('text_fr', models.TextField()),
                ('meta_name_fr', models.CharField(max_length=200)),
                ('description_fr', models.TextField()),
                ('title_en', models.CharField(max_length=200)),
                ('text_en', models.TextField()),
                ('meta_name_en', models.CharField(max_length=200)),
                ('description_en', models.TextField()),
                ('date_start_event', models.DateField()),
                ('date_stop_event', models.DateField()),
                ('localisation', models.CharField(max_length=200)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
            },
        ),
        migrations.CreateModel(
            name='RegistrationType',
            fields=[
                ('id_type', models.AutoField(primary_key=True, serialize=False)),
                ('id_admin', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name_fr', models.CharField(choices=[('PARTICULAR', 'Particulier'), ('ONG', 'ONG'), ('ENTREPRISE', 'Entreprise')], max_length=50)),
                ('name_en', models.CharField(choices=[('PARTICULAR', 'Individual'), ('ONG', 'NGO'), ('ENTREPRISE', 'Company')], max_length=50)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Type de Registration',
                'verbose_name_plural': 'Types de Registration',
            },
        ),
        migrations.CreateModel(
            name='TypeEvent',
            fields=[
                ('id_type_event', models.AutoField(primary_key=True, serialize=False)),
                ('id_admin', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name_fr', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': "Type d'Événement",
                'verbose_name_plural': "Types d'Événement",
            },
        ),
        migrations.CreateModel(
            name='RegistrationVisitors',
            fields=[
                ('id_registration', models.AutoField(primary_key=True, serialize=False)),
                ('id_admin', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('id_redactor', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('validation', models.BooleanField(default=False)),
                ('name_organization', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('date_registration', models.DateTimeField(auto_now_add=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=100, unique=True)),
                ('id_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='inscriptions.event')),
                ('id_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='inscriptions.registrationtype')),
            ],
            options={
                'verbose_name': 'Registration Visiteur',
                'verbose_name_plural': 'Registrations Visiteurs',
            },
        ),
        migrations.CreateModel(
            name='ImgRegistration',
            fields=[
                ('id_img_registration', models.AutoField(primary_key=True, serialize=False)),
                ('url_img', models.CharField(max_length=255)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('registration_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='inscriptions.registrationvisitors', to_field='registration_number')),
            ],
            options={
                'verbose_name': 'Image de Registration',
                'verbose_name_plural': 'Images de Registration',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='id_type_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='inscriptions.typeevent'),
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_scan', models.CharField(choices=[('ENTREE', 'Entrée'), ('SORTIE', 'Sortie')], max_length=10)),
                ('date_scan', models.DateTimeField(auto_now_add=True)),
                ('jour_evenement', models.PositiveIntegerField(editable=False)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='inscriptions.registrationvisitors', to_field='registration_number')),
            ],
            options={
                'verbose_name': 'Scan',
                'verbose_name_plural': 'Scans',
                'unique_together': {('registration', 'type_scan', 'jour_evenement')},
            },
        ),
    ]
